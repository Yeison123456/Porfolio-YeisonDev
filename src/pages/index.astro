
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.25">
  <title>Portfolio - YeisonDev</title>
  <link href="/dist/output.css" rel="stylesheet">
  <link href="https://fonts.googleapis.com/css2?family=Jersey+25&display=swap" rel="stylesheet">
  <style>
    body, html {
      margin: 0;
      padding: 0;
      overflow: hidden;
	  background-color: rgb(10, 10, 10);
    }
    canvas {
		display: block;
		position: fixed;
		top: 0;
		left: 0;
		width: 100vw; /* Asegura que el canvas cubra todo el ancho */
		height: 100vh; /* Asegura que el canvas cubra toda la altura */
		z-index: -1; /* Envía el canvas al fondo */
	}


  </style>
</head>
<body class="bg-transparent w-full h-screen 2xl:flex 2xl:flex-col 2xl:items-center">

	<header class="2xl:w-full 2xl:h-24 2xl:bg-transparent 2xl:flex 2xl:justify-end 2xl:items-center">
		<div class="2xl:w-1/2 2xl:h-full 2xl:flex 2xl:justify-around 2xl:items-center ">
			<a href=""><p class="text-white 2xl:font-extrabold 2xl:text-xl 2xl:tracking-wider">Home</p></a>
			<a href=""><p class="text-white 2xl:font-extrabold 2xl:text-xl 2xl:tracking-wider">About me</p></a>
			<a href=""><p class="text-white 2xl:font-extrabold 2xl:text-xl 2xl:tracking-wider">Contact</p></a>
			<button class="2xl:w-2/12 2xl:h-2/6 2xl:bg-white rounded-lg"><a href=""><p class="text-black 2xl:font-extrabold 2xl:text-xl 2xl:tracking-wider">Light</p></a></button>
		</div>
	</header>

	<main class="2xl:w-10/12 2xl:h-5/6 2xl:flex 2xl:items-center 2xl:justify-around">
		<div class="2xl:w-1/2 2xl:h-full flex flex-col justify-center">
			<p class="text-6xl font-extrabold text-white leading-normal tracking-wider" style="font-family: 'Jersey 25', sans-serif;">Hi! I´m <strong class="text-emerald-400">Yeison</strong>  <br>	And i´m <strong class="text-emerald-400 animated-text">developer</strong></p>
			<button role="link" onclick="window.location='https://github.com/Yeison123456'" class="bg-white w-3/12 h-12 flex justify-evenly items-center rounded-2xl">
				<img src="../../public/img/iconGitHub.png" loading="lazy" class="w-8" alt="iconGitHub">
				<a class="text-black text-xl font-bold">GitHub</a>
			</button>
		</div>
		<section class="2xl:w-2/6 2xl:h-full flex justify-end">
			<div class="2xl:w-4/5 2xl:h-full 2xl:bg-ColorDiscordFondo rounded-3xl flex flex-col items-center">
				<section class="2xl:w-full 2xl:h-1/5 bg-center bg-cover bg-[url('../../public/img/fondoPerfil.png')] rounded-t-3xl"></section>
				<div class="2xl:w-full 2xl:h-1/6 flex justify-around items-center 2xl:-mt-4">
					<section class="2xl:w-28 2xl:h-28 2xl:rounded-full 2xl:absolete 2xl:bg-ColorDiscordFondo 2xl:flex 2xl:justify-center 2xl:items-center  ">
						<section class="2xl:w-24 2xl:h-24 bg-center bg-cover bg-[url('../../public/img/fotoPerfil.png')] 2xl:rounded-full"></section>
						<section class="2xl:w-7 2xl:h-7 bg-ColorDiscordFondo 2xl:rounded-full absolute mt-20 ml-16 flex justify-center items-center">
							<section class="2xl:w-5 2xl:h-5 bg-green-700 2xl:rounded-full"></section>
						</section>
					</section>
					<section class="2xl:w-2/5 2xl:h-2/5 bg-SecondColorDiscord flex justify-evenly items-center rounded-xl">
						<a href="https://github.com/Yeison123456" class=""><div class="2xl:w-5 2xl:h-5 bg-white rounded-full flex items-center justify-center"><img src="../../public/img/iconGitHub.png" class="2xl:w-5" loading="lazy"></div></a>
						<a href="https://www.linkedin.com/in/yeison-david-rodr%C3%ADguez-rodriguez-ydrr/" class=""><img src="../../public/img/iconLinkeind.png" class="2xl:w-5" loading="lazy"></a>
						<a href="https://www.instagram.com/otro_wey1/" class=""><img src="../../public/img/iconInstagram.png" class="2xl:w-5" loading="lazy"></a>
					</section>
				</div>
				<section class="2xl:w-5/6 2xl:h-1/6 2xl:flex 2xl:flex-col 2xl:justify-evenly mt-1">
					<p class="2xl:font-extrabold text-white 2xl:tracking-wider 2xl:text-base w-1/3 ">Yeison
						<strong class="2xl:font-medium 2xl:text-gray-300 2xl:text-xs">@yeisondev</strong>
					</p>
					<div class="2xl:w-5/6 flex items-center">
						<img src="../../public/img/iconVisualStudioCode.png" loading="lazy" class="2xl:w-6">
						<p class="ml-2 text-white text-sm">Playing <strong>Visual Studio Code</strong></p>
					</div>
				</section>
				<hr class="w-5/6 border-zinc-500 my-1">
				<section class="2xl:w-5/6">
					<h5 class="text-base font-bold text-white 2xl:tracking-wider mb-1">About Me</h5>
					<div class="2xl:w-5/6 flex items-center">
						<img src="../../public/img/stickerGumball.png" loading="lazy" class="2xl:w-6">
						<p class="ml-2 text-white text-xs">He - 1.81 - 19 years old</p>
					</div>
					<ul class="list-disc ml-4 text-white w-4/5">
						<li class="text-xs">Software engineer in process</li>
						<li class="text-xs">I like programming, playing, eating and the anime</li>
					</ul>
					
					<h5 class="text-base font-bold text-white 2xl:tracking-wider my-2">Playing a Game</h5>
					<div class="2xl:w-5/6 flex items-center justify-center">
						<img src="../../public/img/iconAstro.png" loading="lazy" class="2xl:w-10 mt-2">
						<div class="w-2/3 ml-4">
							<p class="ml-2 text-white text-xs font-bold">Visual Studio code</p>
							<p class="ml-2 text-white text-xs">Editing index.astro</p>
							<p class="ml-2 text-white text-xs">at 20:39 | Filesize 8.33KB</p>
						</div>
					</div>
					<h5 class="text-base font-bold text-white 2xl:tracking-wider my-1">Member Since</h5>
					<div class="2xl:w-5/6 flex items-center">
						<img src="../../public/img/iconComputer.png" loading="lazy" class="2xl:w-6">
						<p class="ml-2 text-white text-xs">January 2021 - Present</p>
					</div>
				</section>
			</div>
		</section>
	</main>

  <canvas></canvas>
</body>


<script defer>
	const canvas = document.querySelector("canvas");
	const ctx = canvas?.getContext("2d");
  
	if (canvas) {
	  canvas.width = window.innerWidth;
	  canvas.height = window.innerHeight;
	}
  
	// Objeto para almacenar la posición del mouse
	const mouse = {
	  x: null,
	  y: null,
	};
  
	// Actualizar la posición del mouse
	window.addEventListener("mousemove", (event) => {
	  mouse.x = event.clientX;
	  mouse.y = event.clientY;
	});
  
	// Limpiar la posición del mouse cuando salga del canvas
	window.addEventListener("mouseout", () => {
	  mouse.x = null;
	  mouse.y = null;
	});
  
	class Bola {
	  constructor(x, y) {
		this.x = Math.random() * canvas.width;
		this.y = Math.random() * canvas.height;
		this.radio = 5;
		this.dirX = (Math.random() * 2) - 1;
		this.dirY = (Math.random() * 2) - 1;
		this.velocidad = 5;
		this.color = "rgb(43, 43, 43)"; // Color de la bola
	  }
  
	  dibujar() {
		if (ctx) {
		  ctx.fillStyle = this.color;
		  ctx.beginPath();
		  ctx.arc(this.x, this.y, this.radio, 0, Math.PI * 2);
		  ctx.fill();
		  ctx.closePath();
		}
	  }
  
	  mover() {
		this.x += this.dirX * this.velocidad;
		this.y += this.dirY * this.velocidad;
  
		if (this.x + this.radio > canvas.width || this.x - this.radio < 0) {
		  this.dirX *= -1;
		}
		if (this.y + this.radio > canvas.height || this.y - this.radio < 0) {
		  this.dirY *= -1;
		}
	  }
	}
  
	if (canvas) {
	  let bolas = [];
	  const cantidadBolas = 40;
  
	  for (let i = 0; i < cantidadBolas; i++) {
		bolas.push(new Bola(canvas.width / 2, canvas.height / 2));
	  }
  
	  function animar() {
		ctx.clearRect(0, 0, canvas.width, canvas.height);
  
		bolas.forEach((bola) => {
		  // Conectar bolas entre sí
		  bolas.forEach((bola2) => {
			const dx = bola2.x - bola.x;
			const dy = bola2.y - bola.y;
			const dist = Math.sqrt(dx ** 2 + dy ** 2);
  
			if (dist < 350) {
			  ctx.strokeStyle = bola.color;
			  ctx.lineWidth = 2;
			  ctx.beginPath();
			  ctx.lineTo(bola.x, bola.y);
			  ctx.lineTo(bola2.x, bola2.y);
			  ctx.stroke();
			  ctx.closePath();
			}
		  });
  
		  // Conectar bolas con el mouse
		  if (mouse.x !== null && mouse.y !== null) {
			const dx = mouse.x - bola.x;
			const dy = mouse.y - bola.y;
			const dist = Math.sqrt(dx ** 2 + dy ** 2);
  
			if (dist < 300) {
			  ctx.strokeStyle = bola.color; // Color de las líneas al mouse
			  ctx.beginPath();
			  ctx.lineTo(mouse.x, mouse.y);
			  ctx.lineTo(bola.x, bola.y);
			  ctx.stroke();
			  ctx.closePath();
			}
		  }
  
		  bola.dibujar();
		  bola.mover();
		});
  
		requestAnimationFrame(animar);
	  }
  
	  function ajustarCanvas() {
		const oldWidth = canvas.width;
		const oldHeight = canvas.height;
  
		canvas.width = window.innerWidth;
		canvas.height = window.innerHeight;
  
		// Ajustar posiciones proporcionales
		bolas.forEach((bola) => {
		  bola.x = (bola.x / oldWidth) * canvas.width;
		  bola.y = (bola.y / oldHeight) * canvas.height;
		});
	  }
  
	  window.addEventListener("resize", ajustarCanvas);
  
	  animar();
	}


	// Animation text
	const textElement = document.querySelector('.animated-text');
    const words = ["developer", "gamer", "an athlete"]; // Lista de palabras
    let currentWordIndex = 0;

    function deleteText() {
      const currentWord = words[currentWordIndex];
      let index = currentWord.length;

      function erase() {
        if (index > 0) {
          textElement.textContent = currentWord.slice(0, index);
          index--;
          setTimeout(erase, 100);
        } else {
          typeText();
        }
      }
      erase();
    }

    function typeText() {
      const nextWordIndex = (currentWordIndex + 1) % words.length; // Índice siguiente palabra
      const nextWord = words[nextWordIndex];
      let newIndex = 0;

      function type() {
        if (newIndex <= nextWord.length) {
          textElement.textContent = nextWord.slice(0, newIndex);
          newIndex++;
          setTimeout(type, 150);
        } else {
          currentWordIndex = nextWordIndex; // Actualiza al siguiente índice
          setTimeout(deleteText, 1000); // Pausa antes de borrar
        }
      }
      type();
    }

    // Inicia la animación
    setTimeout(deleteText, 1000);

</script>
  
</html>
